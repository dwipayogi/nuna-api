// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  username      String
  email         String        @unique
  password      String
  createdAt     DateTime      @default(now()) @map("created_at")
  updatedAt     DateTime      @updatedAt @map("updated_at")

  // One-to-many relationship with Journal
  journals      Journal[]
  posts         Post[]
  comments      Comment[]
  likedPosts    UserLike[]
  // Add this relation
  moodHistory   MoodHistory[]
}

model Journal {
  id            String    @id @default(uuid())
  title         String
  content       String
  mood          String
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  userId        String

  // Foreign key to User
  user          User      @relation(fields: [userId], references: [id])
}

model Post {
  id            String    @id @default(uuid())
  title         String
  content       String
  tags          String[]
  likes         Int       @default(0)
  commentsCount Int       @default(0)
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  userId        String

  // Foreign key to User
  user          User      @relation(fields: [userId], references: [id])
  // One-to-many relationship with Comment
  comments      Comment[]
  // Add this new relation
  likedBy       UserLike[]
}

model Comment {
  id            String    @id @default(uuid())
  content       String
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  postId        String
  userId        String

  // Foreign key to Post
  post          Post      @relation(fields: [postId], references: [id])
  // Foreign key to User
  user          User      @relation(fields: [userId], references: [id])
}

model Meditate {
  id              String    @id @default(uuid())
  title           String
  description     String
  longDescription String
  duration        Int
  imageUrl        String
  link            String?   // Added link field for meditation resource
  steps           String[]
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")
}

// Add this new model
model UserLike {
  id        String   @id @default(uuid())
  userId    String
  postId    String
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])

  // Ensure a user can only like a post once
  @@unique([userId, postId])
}

// Add this new model for tracking mood history
model MoodHistory {
  id            String    @id @default(uuid())
  userId        String
  mood          String
  startTime     DateTime  @default(now()) @map("start_time")
  endTime       DateTime? @map("end_time")
  durationMinutes Int?    @map("duration_minutes")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")

  // Foreign key to User
  user          User      @relation(fields: [userId], references: [id])
}